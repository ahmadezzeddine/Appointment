@using App.Schedule.Domains.ViewModel;
@model  ResponseViewModel<RegisterViewModel>
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_NotAuthLayout.cshtml";
}
<div class="container">
    @using (Ajax.BeginForm("Register", new AjaxOptions { }))
    {
        @Html.AntiForgeryToken()
        <div class="panel panel-default" style="margin-top:40px; margin: 50px auto; width:500px;">
            <div class="panel-heading">
                Business Information
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-12">
                        @Html.Partial("~/Views/SubViews/_Error.cshtml", Model)
                    </div>
                </div>
                <div class="step col-lg-12" style="border:0;">
                    <div class="row">
                        @*<div class="progress">
                                <div class="progress-bar progress-bar-striped progress-bar-success active" role="progressbar" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>*@
                        <div class="col-lg-12 text-left">
                            <h3 class="white-text">Register Your Business</h3>
                        </div>
                        <div class="form-group col-lg-12 required control-label">
                            <label>Business Name</label>
                            @Html.EditorFor(d => d.Data.Business.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Business Name" } })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Business.Name)
                            </span>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>Short Name</label>
                            @Html.EditorFor(d => d.Data.Business.ShortName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Short Name" } })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Business.ShortName)
                            </span>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>Email</label>
                            @Html.EditorFor(d => d.Data.Business.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Business Email" } })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Business.Email)
                            </span>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>Phone No.</label>
                            @Html.EditorFor(d => d.Data.Business.PhoneNumbers, new { htmlAttributes = new { @class = "form-control", min = "0", @type = "number", @placeholder = "Phone No." } })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Business.PhoneNumbers)
                            </span>
                        </div>

                        <div class="form-group col-lg-12">
                            <label>Fax No.</label>
                            @Html.EditorFor(d => d.Data.Business.FaxNumbers, new { htmlAttributes = new { @class = "form-control", @placeholder = "Fax No." } })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Business.FaxNumbers)
                            </span>
                        </div>

                        <div class="form-group col-lg-12">
                            <label>Website</label>
                            @Html.EditorFor(d => d.Data.Business.Website, new { htmlAttributes = new { @class = "form-control", @placeholder = "Business Website" } })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Business.Website)
                            </span>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>Address 1</label>
                            @Html.TextAreaFor(d => d.Data.Business.Add1, new { @class = "form-control", @rows = "1", @placeholder = "Address 1" })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Business.Add1)
                            </span>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>Address 2</label>
                            @Html.TextAreaFor(d => d.Data.Business.Add2, new { @class = "form-control", @rows = "1", @placeholder = "Address 2" })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Business.Add2)
                            </span>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>City</label>
                            @Html.EditorFor(d => d.Data.Business.City, new { htmlAttributes = new { @class = "form-control", @placeholder = "City" } })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Business.City)
                            </span>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>State</label>
                            @Html.EditorFor(d => d.Data.Business.State, new { htmlAttributes = new { @class = "form-control", @placeholder = "State" } })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Business.State)
                            </span>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>Zip code</label>
                            @Html.EditorFor(d => d.Data.Business.Zip, new { htmlAttributes = new { @class = "form-control", @placeholder = "Zip Code" } })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Business.Zip)
                            </span>
                        </div>
                    </div>
                </div>
                <div class="step col-lg-12" style="border:0;">
                    <div class="row">
                        <div class="col-lg-12 text-left">
                            <h3 class="white-text">Admin Login Information</h3>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>First Name</label>
                            @Html.EditorFor(d => d.Data.Employee.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name" } })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Employee.FirstName)
                            </span>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>Last Name</label>
                            @Html.EditorFor(d => d.Data.Employee.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Name" } })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Employee.LastName)
                            </span>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>Email</label>
                            @Html.EditorFor(d => d.Data.Employee.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Login Email Id" } })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Employee.Email)
                            </span>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>Phone No.</label>
                            @Html.EditorFor(d => d.Data.Employee.PhoneNumber, new { htmlAttributes = new { @class = "form-control", min = "0", @type = "number", @placeholder = "Contact Number" } })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Employee.PhoneNumber)
                            </span>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>Password</label>
                            @Html.EditorFor(d => d.Data.Employee.Password, new { htmlAttributes = new { @class = "form-control", @type = "password", @placeholder = "Password" } })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Employee.Password)
                            </span>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>Confirm Password</label>
                            @Html.EditorFor(d => d.Data.Employee.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @type = "password", @placeholder = "Confirm Password" } })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Employee.ConfirmPassword)
                            </span>
                        </div>
                    </div>
                </div>
                <div class="step col-lg-12" style="border:0;">
                    <div class="row">
                        <div class="col-lg-12 text-left">
                            <h3 class="white-text">Account Information</h3>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>Membership Information</label>
                            @Html.DropDownListFor(d => d.Data.Business.MembershipId, new SelectList(ViewBag.MembershipId, "Value", "Text"), "--Select Membership --", new { @class = "form-control" })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Business.MembershipId)
                            </span>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>Timezone Information</label>
                            @Html.DropDownListFor(d => d.Data.Business.TimezoneId, new SelectList(ViewBag.TimezoneId, "Value", "Text"), "--Select Timezone --", new { @class = "form-control" })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Business.TimezoneId)
                            </span>
                        </div>

                        <div class="form-group col-lg-12 required control-label">
                            <label>Business Category</label>
                            @Html.DropDownListFor(d => d.Data.Business.BusinessCategoryId, new SelectList(ViewBag.BusinessCategoryId, "Value", "Text", "Group.Name", -1), "--Select Category --", new { @class = "form-control" })
                            <span class="text-danger">
                                @Html.ValidationMessageFor(d => d.Data.Business.BusinessCategoryId)
                            </span>
                        </div>

                        <div class="form-group col-lg-12">
                            <label>Is International? (check if international.)</label>
                            <div class="form-control">
                                @Html.CheckBoxFor(d => d.Data.Business.IsInternational, new { htmlAttributes = new { @type = "checkbox" } })
                                <span class="text-danger">
                                    @Html.ValidationMessageFor(d => d.Data.Business.IsInternational)
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-12">
                    <a class="action next btn btn-default">Next</a>
                    <a class="action submit btn btn-success" onclick="onRegistration(this,'@Url.Action("Index", "Home", new { area = "" })');">Submit</a>
                    <a class="action back btn btn-default">Back</a>
                </div>
            </div>
        </div>
    }
</div>

@section scripts{
    <script>
        $(document).ready(function () {
            var current = 1;

            widget = $(".step");
            btnnext = $(".next");
            btnback = $(".back");
            btnsubmit = $(".submit");

            // Init buttons and UI
            widget.not(':eq(0)').hide();
            hideButtons(current);
            setProgress(current);

            // Next button click action
            btnnext.click(function () {

                var status = ValidateForm2(this);
                if (status) {
                    return false;
                }
                else {
                    if (current < widget.length) {
                        widget.show();
                        widget.not(':eq(' + (current++) + ')').hide();
                        setProgress(current);
                    }
                    hideButtons(current);
                }
            });
            // Back button click action
            btnback.click(function () {
                if (current > 1) {
                    current = current - 2;
                    btnnext.trigger('click');
                }
                hideButtons(current);
            });

        });

        // Change progress bar action
        setProgress = function (currstep) {
            var percent = parseFloat(100 / widget.length) * currstep;
            percent = percent.toFixed();
            $(".progress-bar")
                .css("width", percent + "%")
                .html(percent + "%");
        }

        // Hide buttons according to the current step
        hideButtons = function (current) {
            var limit = parseInt(widget.length);

            $(".action").hide();

            if (current < limit) btnnext.show(); if (current > 1) btnback.show();
            if (current == limit) { btnnext.hide(); btnsubmit.show(); }
        }

        function onRegistration(btnSubmit, target) {
            var status = ValidateForm2(this);
            if (status) {
                return false;
            }
            else {
                onSubmit(btnSubmit, target);
            }
        }

        function ValidateForm2(btnSubmit) {
            var $form = $('#form0');
            //var validator = $form.validate();
            //$form.find('input').each(function () {
            //    if (!validator.element(this)) {
            //        return false;
            //    }
            //});
            //return true;
            if (!$form.valid()) {
                return true;
            }
        }
    </script>
}
